% Generated by roxygen2 (4.0.2): do not edit by hand
\name{sampling_parallel}
\alias{sampling_parallel}
\title{Sample from a Stan model in parallel}
\usage{
sampling_parallel(object, data, chains = 4L, cores = 2L, rng_seed = NULL,
  ...)
}
\arguments{
\item{object}{An object of class \code{stanmodel}. E.g., an object returned
by \code{\link[rstan]{stan_model}}.}

\item{data}{An object of class \code{list} containing data to be passed to
\code{\link[rstan]{stan}}.}

\item{chains}{Positive integer giving the number of chains to pass to
\code{\link[rstan]{stan}}.}

\item{cores}{Positive integer giving the number of cores to use. Passed
to the \code{mc.cores} argument in \code{\link[parallel]{mclapply}}.}

\item{rng_seed}{An optional value to pass to \code{\link[base]{set.seed}}.}

\item{...}{Anything else to pass to \code{\link[rstan]{stan}}.}
}
\value{
An S4 object of class \code{stanfit} as returned from
  \code{\link[rstan]{stan}}. The multiple chains have been joined into a
  single model object.
}
\description{
Sample from a Stan model in parallel (on Unix-like machines). This is simply
a wrapper for the code on the \pkg{rstan} wiki to make it simple to sample
from Stan models without writing lots of code each time.
}
\examples{
\donttest{
schools_code <- "data {
  int<lower=0> J; // number of schools
  real y[J]; // estimated treatment effects
  real<lower=0> sigma[J]; // s.e. of effect estimates
}
parameters {
  real mu;
  real<lower=0> tau;
  real eta[J];
}
transformed parameters {
  real theta[J];
  for (j in 1:J)
    theta[j] <- mu + tau * eta[j];
}
model {
  eta ~ normal(0, 1);
  y ~ normal(theta, sigma);
}"

schools_dat <- list(
  J = 8,
  y = c(28,  8, -3,  7, -1,  1, 18, 12),
  sigma = c(15, 10, 16, 11,  9, 11, 10, 18))

sm <- rstan::stan_model(model_code = schools_code)
fit <- sampling_parallel(sm, schools_dat, cores = 4L)
fit
}
}
\references{
https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started
}

